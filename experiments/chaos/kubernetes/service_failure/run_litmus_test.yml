---
apiVersion: v1
kind: ConfigMap
metadata:
  name: svc-failure
  namespace: litmus
data:
  parameters.yml: |

---
apiVersion: v1
kind: Secret
metadata:
  name: node-password
  namespace: litmus
type: Opaque
data:
  password:

---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: svc-failure-chaos-
  namespace: litmus 
spec:
  template:
    metadata:
      labels:
        name: svc-failure-chaos
    spec:
      serviceAccountName: litmus
      restartPolicy: Never

      #nodeSelector:
      #  kubernetes.io/hostname:

      tolerations:
      - key: "infra-aid"
        operator: "Equal"
        value: "observer"
        effect: "NoSchedule"

      containers:
      - name: ansibletest
        image: openebs/ansible-runner:ci
        imagePullPolicy: IfNotPresent
        env: 
          - name: ANSIBLE_STDOUT_CALLBACK
            #value: log_plays
            #value: actionable
            value: default

          - name: OPERATOR_NAMESPACE
            value: ""
 
          - name: APP_NAMESPACE
            value: "" 

          - name: APP_LABEL
            value: ""

          - name: APP_PVC
            value: ""
             
            ## specify the service type to perform chaos
            ## for kubelet failure use value: kubelet
            ## for container runtime failure use value: (docker,containerd,cri-o)
          - name: SVC_TYPE 
            value: ""

          - name: LIVENESS_APP_LABEL
            value: ""

          - name: LIVENESS_APP_NAMESPACE
            value: ""

            ## To check data persistence against specific application provide value as below:
            ## (For busybox value: "busybox" and For percona value: "mysql")
          - name: DATA_PERSISTENCE 
            value: ""

          - name: NODE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: node-password
                key: password
                
        command: ["/bin/bash"]
        args: ["-c", "ansible-playbook ./experiments/chaos/kubernetes/service_failure/test.yml -i /etc/ansible/hosts -vv; exit 0"]

        volumeMounts:
          - name: parameters
            mountPath: /mnt/
      volumes:
        - name: parameters
          configMap:
            name: svc-failure
  