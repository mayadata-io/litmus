---
- hosts: localhost
  connection: local
  gather_facts: False

    
  vars_files:
    - test_vars.yml
    
  tasks:
    - block:
    
       ## Generating the testname for deployment
       - include_tasks: /utils/fcm/create_testname.yml
    
       ## RECORD START-OF-TEST IN LITMUS RESULT CR
       - include_tasks: /utils/fcm/update_litmus_result_resource.yml
         vars:
           status: 'SOT'
       
       - block:

          - name: Create Zpool on each worker node
            include_tasks: /utils/zpool_creation/create_zpool.yml
            when: lookup('env','ZPOOL_CREATION') == 'true'
        
          - name: Download OpenEBS ZFS-LocalPV operator file
            get_url:
              url: https://raw.githubusercontent.com/openebs/zfs-localpv/{{ zfs_branch }}/deploy/zfs-operator.yaml
              dest: ./zfs_operator.yml
              force: yes
            register: result
            until: "'OK' in result.msg"
            delay: 5
            retries: 3
   
          - name: Update the openebs zfs-driver image tag
            replace:
              path: ./zfs_operator.yml
              regexp: openebs/zfs-driver:ci
              replace: "{{ lookup('env','ZFS_DRIVER_IMAGE') }}"
            when: lookup('env','ZFS_DRIVER_IMAGE') | length > 0

          - name: Apply the zfs_operator file to deploy zfs-driver components
            shell: 
              kubectl apply -f ./zfs_operator.yml
            args:
              executable: /bin/bash

            ## Verify the ZFS driver components are installed and running

          - name: Verify that the ZFS-controller pod and zfs-node daemonset is running
            shell: >
              kubectl get pods -n kube-system -l role=openebs-zfs
              --no-headers -o custom-columns=:status.phase | sort | uniq
            args: 
              executable: /bin/bash
            register: ZFS_driver_components
            until: "ZFS_driver_components.stdout == 'Running'"
            delay: 5
            retries: 30

          - name: Update the storage class template with the variables.
            template:
              src: openebs-zfspv-sc.j2
              dest: openebs-zfspv-sc.yml

          - name: Create Storageclasses
            shell: kubectl apply -f openebs-zfspv-sc.yml
            args:
              executable: /bin/bash
            register: sc_result
            failed_when: "sc_result.rc != 0"

          - name: Update volume snapshot class template with the test specific variables.
            template:
              src: snapshot-class.j2
              dest: snapshot-class.yml
              
          - name: Create VolumeSnapshotClass
            shell: kubectl apply -f snapshot-class.yml
            args:
              executable: /bin/bash
            register: volsc_result
            failed_when: "volsc_result.rc != 0"
             
         when: "'deprovision' not in action"

       - name: Destroy the ZPOOL
         include_tasks: /utils/zpool_creation/create_zpool.yml
         when: "'deprovision' is in action"
    
       - set_fact:
           flag: "Pass"

      rescue:
        - name: Setting fail flag
          set_fact:
            flag: "Fail"

      always:
        ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_litmus_result_resource.yml
          vars:
            status: 'EOT'
        
 