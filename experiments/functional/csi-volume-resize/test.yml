---
#Description: Validate if csi volume can be resized.
#
########################################################################################
#Steps:                                                                                #
#1) Creating LitmusResult CR for updating test result.                                 #
#2) Obtain the PVC spec                                                                #
#3) Update the PVC spec with the desired volume capacity.                              #
#4) Apply the updated PVC spec                                                         #
########################################################################################

- hosts: localhost
  connection: local
  gather_facts: False


  vars_files:
    - test_vars.yml

  tasks:
    - block:
          ## Generating the testname for deployment
        - include_tasks: /utils/fcm/create_testname.yml

        ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: "/utils/fcm/update_litmus_result_resource.yml"
          vars:
            status: 'SOT'

        - block:

            - name: Check if the desired PVC is bound
              shell: >
                kubectl get pvc {{ app_pvc }} -n {{ app_ns }} --no-headers
                -o custom-columns=:.status.phase
              args:
                executable: /bin/bash
              register: pvc_status
              failed_when: "'Bound' not in pvc_status.stdout"

            - name: Obtain the PVC spec
              shell: >
                kubectl get pvc {{ app_pvc }} -n {{ app_ns }}
                --no-headers -o yaml > pvc.yml
              args:
                executable: /bin/bash

            - name: Update the desired capacity in PVC spec
              replace:
                path: pvc.yml
                before: 'storageClassName: {{ storage_class }}'
                regexp: "storage: {{ vol_size }}"
                replace: "storage: {{ desired_vol_size }}"

            - name: Configure PVC with the new capacity
              shell: kubectl apply -f pvc.yml
              args:
                executable: /bin/bash
              register: result
              failed_when: "result.rc != 0"

            - name: Check if the desired PVC is bound
              shell: >
                kubectl get pvc {{ app_pvc }} -n {{ app_ns }} --no-headers
                -o custom-columns=:.status.phase
              args:
                executable: /bin/bash
              register: pvc_status
              failed_when: "'Bound' not in pvc_status.stdout"

            - name: Check if the storage capacity is updated in PVC
              shell: >
                 kubectl get pvc {{ app_pvc }} -n {{ app_ns }} --no-headers 
                 -o custom-columns=:status.capacity.storage
              args:
                executable: /bin/bash
              register: capacity
              until: "desired_vol_size in capacity.stdout"
              delay: 10
              retries: 50

        - set_fact:
            flag: "Pass"

      rescue:
        - set_fact:
            flag: "Fail"

      always:
           ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_litmus_result_resource.yml
          vars:
            status: 'EOT'
