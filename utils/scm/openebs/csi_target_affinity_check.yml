---
- name: Obtain node where app pod resides
  shell: >
    kubectl get pods -l {{ app_label }} -n {{ app_ns }}
    --no-headers -o custom-columns=:spec.nodeName
  args:
    executable: /bin/bash
  register: app_node

- name: Derive PV from application PVC
  shell: >
    kubectl get pvc {{ app_pvc }}
    -o custom-columns=:spec.volumeName -n {{ app_ns }} --no-headers
  args:
    executable: /bin/bash
  register: pv

- name: Obtain the node where PV target pod resides
  shell: >
    kubectl get pod -n {{ operator_ns }}
    -o jsonpath='{.items[?(@.metadata.labels.openebs\.io\/persistent-volume=="{{ pv.stdout }}")].spec.nodeName}'
  args:
    executable: /bin/bash
  register: target_node

- name: Verify whether the app & target pod co-exist on same node
  debug:
    msg: "App and Target affinity is maintained"
  failed_when: target_node.stdout != app_node.stdout
