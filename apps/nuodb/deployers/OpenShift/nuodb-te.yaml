apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: te-test
  labels:
    group: nuodb
    subgroup: transaction
    deploymentconfig: te
    domain: domain
spec:
  replicas: 1
  template:
    metadata:
      labels:
        deploymentconfig: te
        domain: domain
        nodetype: te
        group: nuodb
        subgroup: transaction
    spec:
      nodeSelector:
        nuodb.com/zone: a
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - { key: nodetype, operator: In, values: [ "sm", "te" ] }
              - { key: database, operator: In, values: [ "test" ] }
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: te
        image: nuodb/nuodb-ce:latest
        imagePullPolicy: IfNotPresent
        args: [ "nuote", "--database-created-timeout", "300", "--servers-ready-timeout", "300" ]
        ports:
        - containerPort: 48006
          protocol: TCP
        resources:
          requests:
            memory: "1Gi"
            cpu: "0.5"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: "nuodb.secret"
              key: database-name
        - { name: NUOCMD_API_SERVER,   value: "a.$(NAMESPACE).svc:8888" }
        - { name: PEER_ADDRESS,        value: "a.$(NAMESPACE).svc" }
        - { name: NUODB_OPTIONS,       value: "mem 1g" }
        - { name: NUODB_LABELS,        value: "te te1)" }
        - { name: NODE_ZONE,           value: "a" }
        volumeMounts:
        - name: logdir
          mountPath: /var/log/nuodb
      volumes:
      - name: logdir
        emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 15
