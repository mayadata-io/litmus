---

- name: Replace the pvc placeholder with provider
  replace:
    path: "{{ application_deployment }}"
    regexp: "testclaim"
    replace: "{{ lookup('env','APP_PVC') }}"

- include_tasks: /utils/scm/openebs/fetch_replica_values.yml
  when: lookup('env', 'APP_REPLICA')

- name: Get the application label values from env
  set_fact:
     app_lkey: "{{ app_label.split('=')[0] }}"
     app_lvalue: "{{ app_label.split('=')[1] }}"

- name: Replace the application label placeholder in deployment spec
  replace:
    path: "{{ application_deployment }}"
    regexp: "lkey: lvalue"
    replace: "{{ app_lkey }}: {{ app_lvalue }}"

- include_tasks: /utils/k8s/create_ns.yml

- name: Replace the affinity label annotation in statefulset yml
  replace:
    path: "{{ application_deployment }}"
    regexp: "affinity_label"
    replace: "{{ affinity_label }}"
 
- name: Replacing the volume capcity placeholder with provider
  replace:
    path: "{{ application_deployment }}"
    regexp: "teststorage"
    replace: "{{ lookup('env','PV_CAPACITY') }}"

- name: Replacing the SPC name in storage class yml
  replace:
    path: "./storage_class.yml"
    regexp: "spc-name"
    replace: "{{ lookup('env','SPC_NAME') }}"

- name: Replacing the replica count in spc yml
  replace:
    path: "./storage_class.yml"
    regexp: "replica-count"
    replace: "{{ lookup('env','VOLUME_REPLICAS') }}"

- name: Creating storage class
  shell: kubectl apply -f storage_class.yml

- name: Replace the storageclass placeholder with provider
  replace:
    path: "{{ application_deployment }}"
    regexp: "testclass"
    replace: "openebs-cstor-cvr-scale" 
