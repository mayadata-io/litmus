---
            - name: create job yaml spec for migrate cstor volume
              template:
                src: ./cstor-pool-migration-job.j2
                dest: ./cstor-pool-migration-job-{{ outer_item }}.yml

            - name: Replacing the pool name in migrating cstor pool job spec
              replace:
                path: ./cstor-pool-migration-job-{{ outer_item}}.yml
                regexp: "pool_name"
                replace: "{{ outer_item }}"

            - name: Replacing the service Account name in migrate cstor pool job spec
              replace:
                path: ./cstor-pool-migration-job-{{ outer_item }}.yml
                regexp: "service_account"
                replace: "{{ service_account.stdout }}"

            - name: Create the job to migrate the cstor pool
              shell: kubectl apply -f cstor-volume-upgrade-job-{{ outer_item}}.yml
              args:
                executable: /bin/bash

            - name: Check if the migration jobs have been completed
              shell: kubectl get pods -n {{ operator_ns }} -l job-name={{ outer_item}} -o custom-columns=:.status.phase --no-headers
              register: job_status
              until: "'Succeeded' in job_status.stdout"
              delay: 10
              retries: 60

            - name: Check if the old SPC been removed
              shell: kubectl get spc {{ outer_item }} -o custom-columns=:.metadata.name --no-headers
              register: old_spc
              failed_when: "old_spc.stdout == outer_item"

            - name: Check if the old SPC been removed
              shell: >
                 kubectl get csp -l openebs.io/storage-pool-claim={{ outer_item }}
                 -o=jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}'
              register: csp_name
              failed_when: 'csp_name.stdout != ""'

            - name: Check if the SPC migrated into CSPC
              shell: kubectl get cspc -n {{ operator_ns }} -o custom-colums=:.metadata.name --no-headers
              register: cspc
              until: "{{ outer_item }} in cspc.stdout"
              delay: 10
              retries: 60

            - name: Check the cspi are in ONLINE state after migrate the pool
              shell: >
                kubectl get cspi -n openebs -l openebs.io/cstor-pool-cluster={{ outer_item }} -o custom-columns=:.status.phase --no-headers
              register: cspi_status
              until: "((cspi_status.stdout_lines|unique)|length) == 1 and 'ONLINE' in cspi_status.stdout"
              retries: 30
              delay: 10
              with_items:
                 - "{{ cspc_name.stdout_lines }}"

            - name: Check the cspi is not in readOnly state after migrate the pool
              shell: >
                kubectl get cspi -n openebs -l openebs.io/cstor-pool-cluster={{ outer_item }} -o custom-columns=:.status.readOnly --no-headers
              register: cspi_ro_status
              until: "((cspi_ro_status.stdout_lines|unique)|length) == 1 and 'false' in cspi_ro_status.stdout"
              retries: 30
              delay: 10
              with_items:
                 - "{{ cspc_name.stdout_lines }}"

            - name: Check if the CSPC pool pods are in running state after migrate the pool
              shell: >
                kubectl get pods -n {{ operator_ns }}
                -l openebs.io/cstor-pool-cluster={{ outer_item }} -o custom-columns=:.status.phase --no-headers
              register: pool_status
              until: "((pool_status.stdout_lines|unique)|length) == 1 and 'Running' in pool_status.stdout"
              retries: 30
              delay: 10               